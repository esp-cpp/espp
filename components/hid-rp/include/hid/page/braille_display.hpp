#ifndef __HID_PAGE_BRAILLE_DISPLAY_HPP_
#define __HID_PAGE_BRAILLE_DISPLAY_HPP_

#include "hid/usage.hpp"

namespace hid::page {
enum class braille_display : std::uint16_t;
template <> struct info<braille_display> {
  constexpr static page_id_t page_id = 0x0041;
  constexpr static usage_id_t max_usage_id = 0x021e;
  constexpr static const char *name = "Braille Display";
};
enum class braille_display : std::uint16_t {
  BRAILLE_DISPLAY = 0x0001,
  BRAILLE_ROW = 0x0002,
  _8_DOT_BRAILLE_CELL = 0x0003,
  _6_DOT_BRAILLE_CELL = 0x0004,
  NUMBER_OF_BRAILLE_CELLS = 0x0005,
  SCREEN_READER_CONTROL = 0x0006,
  SCREEN_READER_IDENTIFIER = 0x0007,
  ROUTER_SET_1 = 0x00fa,
  ROUTER_SET_2 = 0x00fb,
  ROUTER_SET_3 = 0x00fc,
  ROUTER_KEY = 0x0100,
  ROW_ROUTER_KEY = 0x0101,
  BRAILLE_BUTTONS = 0x0200,
  BRAILLE_KEYBOARD_DOT_1 = 0x0201,
  BRAILLE_KEYBOARD_DOT_2 = 0x0202,
  BRAILLE_KEYBOARD_DOT_3 = 0x0203,
  BRAILLE_KEYBOARD_DOT_4 = 0x0204,
  BRAILLE_KEYBOARD_DOT_5 = 0x0205,
  BRAILLE_KEYBOARD_DOT_6 = 0x0206,
  BRAILLE_KEYBOARD_DOT_7 = 0x0207,
  BRAILLE_KEYBOARD_DOT_8 = 0x0208,
  BRAILLE_KEYBOARD_SPACE = 0x0209,
  BRAILLE_KEYBOARD_LEFT_SPACE = 0x020a,
  BRAILLE_KEYBOARD_RIGHT_SPACE = 0x020b,
  BRAILLE_FACE_CONTROLS = 0x020c,
  BRAILLE_LEFT_CONTROLS = 0x020d,
  BRAILLE_RIGHT_CONTROLS = 0x020e,
  BRAILLE_TOP_CONTROLS = 0x020f,
  BRAILLE_JOYSTICK_CENTER = 0x0210,
  BRAILLE_JOYSTICK_UP = 0x0211,
  BRAILLE_JOYSTICK_DOWN = 0x0212,
  BRAILLE_JOYSTICK_LEFT = 0x0213,
  BRAILLE_JOYSTICK_RIGHT = 0x0214,
  BRAILLE_D_PAD_CENTER = 0x0215,
  BRAILLE_D_PAD_UP = 0x0216,
  BRAILLE_D_PAD_DOWN = 0x0217,
  BRAILLE_D_PAD_LEFT = 0x0218,
  BRAILLE_D_PAD_RIGHT = 0x0219,
  BRAILLE_PAN_LEFT = 0x021a,
  BRAILLE_PAN_RIGHT = 0x021b,
  BRAILLE_ROCKER_UP = 0x021c,
  BRAILLE_ROCKER_DOWN = 0x021d,
  BRAILLE_ROCKER_PRESS = 0x021e,
};
} // namespace hid::page

#endif // __HID_PAGE_BRAILLE_DISPLAY_HPP_
